{"ast":null,"code":"var _jsxFileName = \"D:\\\\Prathiba\\\\localClouflare\\\\src\\\\Domain.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Domain() {\n  _s();\n  const [data, setData] = useState(null);\n  const chartRef = useRef(null);\n  useEffect(() => {\n    fetch('https://myworker.prathibaramesh2120.workers.dev/popular-domains').then(response => response.json()).then(data => {\n      setData(data);\n      console.log(data);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  useEffect(() => {\n    if (data) {\n      const chart = chartRef.current;\n      if (chart) {\n        chart.destroy();\n      }\n      const ctx = document.getElementById('myChart').getContext('2d');\n      chartRef.current = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: data.rankingEntries.map(entry => entry.domain),\n          datasets: [{\n            label: 'Ranking',\n            data: data.rankingEntries.map(entry => entry.rank),\n            backgroundColor: data.rankingEntries.map(entry => {\n              if (entry.rankChange === '1') {\n                return 'rgba(75, 192, 192, 0.2)';\n              } else if (entry.rankChange === '-1') {\n                return 'rgba(255, 99, 132, 0.2)';\n              } else {\n                return 'rgba(54, 162, 235, 0.2)';\n              }\n            }),\n            borderColor: data.rankingEntries.map(entry => {\n              if (entry.rankChange === '1') {\n                return 'rgba(75, 192, 192, 1)';\n              } else if (entry.rankChange === '-1') {\n                return 'rgba(255, 99, 132, 1)';\n              } else {\n                return 'rgba(54, 162, 235, 1)';\n              }\n            }),\n            borderWidth: 1\n          }]\n        },\n        options: {\n          scales: {\n            y: {\n              beginAtZero: true,\n              title: {\n                display: true,\n                text: 'Ranking'\n              }\n            },\n            x: {\n              title: {\n                display: true,\n                text: 'Domain'\n              }\n            }\n          }\n        }\n      });\n    }\n  }, [data]);\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\",\n        fontWeight: \"bold\"\n      },\n      children: \"Popular Domains\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"The domain that have fallen in rank is represented in red and domain that have raised in rank is represented in green \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"myChart\",\n      style: {\n        height: '100px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n_s(Domain, \"CUhfDOJcoWa9sTEM4ueQm8+ULBU=\");\n_c = Domain;\nexport default Domain;\nvar _c;\n$RefreshReg$(_c, \"Domain\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Chart","jsxDEV","_jsxDEV","Domain","_s","data","setData","chartRef","fetch","then","response","json","console","log","catch","error","chart","current","destroy","ctx","document","getElementById","getContext","type","labels","rankingEntries","map","entry","domain","datasets","label","rank","backgroundColor","rankChange","borderColor","borderWidth","options","scales","y","beginAtZero","title","display","text","x","children","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","fontWeight","id","height","_c","$RefreshReg$"],"sources":["D:/Prathiba/localClouflare/src/Domain.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport Chart from 'chart.js/auto';\r\n\r\nfunction Domain() {\r\n    const [data, setData] = useState(null);\r\n    const chartRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        fetch('https://myworker.prathibaramesh2120.workers.dev/popular-domains')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setData(data);\r\n                console.log(data)\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (data) {\r\n            const chart = chartRef.current;\r\n\r\n            if (chart) {\r\n                chart.destroy();\r\n            }\r\n\r\n            const ctx = document.getElementById('myChart').getContext('2d');\r\n            chartRef.current = new Chart(ctx, {\r\n                type: 'bar',\r\n                data: {\r\n                    labels: data.rankingEntries.map(entry => entry.domain),\r\n                    datasets: [\r\n                        {\r\n                            label: 'Ranking',\r\n                            data: data.rankingEntries.map(entry => entry.rank),\r\n                            backgroundColor: data.rankingEntries.map(entry => {\r\n                                if (entry.rankChange === '1') {\r\n                                    return 'rgba(75, 192, 192, 0.2)';\r\n                                } else if (entry.rankChange === '-1') {\r\n                                    return 'rgba(255, 99, 132, 0.2)';\r\n                                } else {\r\n                                    return 'rgba(54, 162, 235, 0.2)';\r\n                                }\r\n                            }),\r\n                            borderColor: data.rankingEntries.map(entry => {\r\n                                if (entry.rankChange === '1') {\r\n                                    return 'rgba(75, 192, 192, 1)';\r\n                                } else if (entry.rankChange === '-1') {\r\n                                    return 'rgba(255, 99, 132, 1)';\r\n                                } else {\r\n                                    return 'rgba(54, 162, 235, 1)';\r\n                                }\r\n                            }),\r\n                            borderWidth: 1,\r\n                        },\r\n                    ],\r\n                },\r\n                options: {\r\n                    scales: {\r\n                        y: {\r\n                            beginAtZero: true,\r\n                            title: {\r\n                                display: true,\r\n                                text: 'Ranking',\r\n                            },\r\n                        },\r\n                        x: {\r\n                            title: {\r\n                                display: true,\r\n                                text: 'Domain',\r\n                            },\r\n                        },\r\n                    },\r\n\r\n                },\r\n            });\r\n        }\r\n    }, [data]);\r\n\r\n    if (!data) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 style={{ textAlign: \"center\", fontWeight: \"bold\" }}>Popular Domains</h1>\r\n            <p style={{ textAlign: \"center\" }}>The domain that have fallen in rank is represented in red and domain that have raised in rank is represented in green </p>\r\n            <canvas id=\"myChart\" style={{ height: '100px' }}></canvas>\r\n            <br />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Domain;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}