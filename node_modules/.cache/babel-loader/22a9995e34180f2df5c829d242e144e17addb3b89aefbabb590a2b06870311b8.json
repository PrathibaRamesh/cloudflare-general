{"ast":null,"code":"import _regeneratorRuntime from\"D:/Prathiba/localClouflare/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"D:/Prathiba/localClouflare/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"D:/Prathiba/localClouflare/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import Chart from'chart.js/auto';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function TrafficChange(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];useEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,text,rows,headers,rawData,chartData;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return fetch('https://raw.githubusercontent.com/lauragift21/hiring-submission-data/main/internet-traffic.csv');case 2:response=_context.sent;_context.next=5;return response.text();case 5:text=_context.sent;rows=text.split('\\n');headers=rows[0].split(',');rawData=rows.slice(1).map(function(row){var values=row.split(',');return headers.reduce(function(obj,header,i){obj[header]=values[i];return obj;},{});});chartData=rawData.slice(-30).map(function(d){return{time:d.Time,totalTrafficChange:parseInt(d['Total Traffic Change']),httpTrafficChange:parseInt(d['HTTP Traffic Change'])};});console.log('Fetched data:',chartData);setData(chartData);case 12:case\"end\":return _context.stop();}},_callee);}));return _fetchData.apply(this,arguments);}fetchData();},[]);useEffect(function(){console.log('Data changed:',data);if(Chart.getChart('traffic-chart')){Chart.getChart('traffic-chart').destroy();}var chartData={labels:data.map(function(d){return d.time;}),datasets:[{label:'Total Traffic Change',data:data.map(function(d){return d.totalTrafficChange;}),fill:false,borderColor:'rgb(75, 192, 192)',tension:0.1},{label:'HTTP Traffic Change',data:data.map(function(d){return d.httpTrafficChange;}),fill:false,borderColor:'rgb(255, 99, 132)',tension:0.1}]};var chartConfig={type:'line',data:chartData};var chartCanvas=document.getElementById('traffic-chart');new Chart(chartCanvas,chartConfig);},[data]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{style:{textAlign:\"center\",fontWeight:\"bold\"},children:\"Traffic Change\"}),/*#__PURE__*/_jsx(\"p\",{style:{textAlign:\"center\"},children:\"The data in improper\"}),/*#__PURE__*/_jsx(\"canvas\",{id:\"traffic-chart\",style:{height:'100px'}})]});}export default TrafficChange;","map":{"version":3,"names":["React","useState","useEffect","Chart","jsx","_jsx","jsxs","_jsxs","TrafficChange","_useState","_useState2","_slicedToArray","data","setData","fetchData","_fetchData","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","text","rows","headers","rawData","chartData","wrap","_callee$","_context","prev","next","fetch","sent","split","slice","map","row","values","reduce","obj","header","i","d","time","Time","totalTrafficChange","parseInt","httpTrafficChange","console","log","stop","getChart","destroy","labels","datasets","label","fill","borderColor","tension","chartConfig","type","chartCanvas","document","getElementById","children","style","textAlign","fontWeight","id","height"],"sources":["D:/Prathiba/localClouflare/src/TrafficChange.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Chart from 'chart.js/auto';\r\n\r\nfunction TrafficChange() {\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const response = await fetch('https://raw.githubusercontent.com/lauragift21/hiring-submission-data/main/internet-traffic.csv');\r\n            const text = await response.text();\r\n            const rows = text.split('\\n');\r\n            const headers = rows[0].split(',');\r\n            const rawData = rows.slice(1).map((row) => {\r\n                const values = row.split(',');\r\n                return headers.reduce((obj, header, i) => {\r\n                    obj[header] = values[i];\r\n                    return obj;\r\n                }, {});\r\n            });\r\n            const chartData = rawData.slice(-30).map((d) => ({\r\n                time: d.Time,\r\n                totalTrafficChange: parseInt(d['Total Traffic Change']),\r\n                httpTrafficChange: parseInt(d['HTTP Traffic Change']),\r\n            }));\r\n            console.log('Fetched data:', chartData);\r\n            setData(chartData);\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        console.log('Data changed:', data);\r\n        if (Chart.getChart('traffic-chart')) {\r\n            Chart.getChart('traffic-chart').destroy();\r\n        }\r\n\r\n        const chartData = {\r\n            labels: data.map((d) => d.time),\r\n            datasets: [\r\n                {\r\n                    label: 'Total Traffic Change',\r\n                    data: data.map((d) => d.totalTrafficChange),\r\n                    fill: false,\r\n                    borderColor: 'rgb(75, 192, 192)',\r\n                    tension: 0.1,\r\n                },\r\n                {\r\n                    label: 'HTTP Traffic Change',\r\n                    data: data.map((d) => d.httpTrafficChange),\r\n                    fill: false,\r\n                    borderColor: 'rgb(255, 99, 132)',\r\n                    tension: 0.1,\r\n                },\r\n            ],\r\n        };\r\n\r\n        const chartConfig = {\r\n            type: 'line',\r\n            data: chartData,\r\n        };\r\n\r\n        const chartCanvas = document.getElementById('traffic-chart');\r\n        new Chart(chartCanvas, chartConfig);\r\n    }, [data]);\r\n\r\n    return (\r\n        <div>\r\n            <h2 style={{ textAlign: \"center\", fontWeight: \"bold\" }}>Traffic Change</h2>\r\n            <p style={{ textAlign: \"center\" }}>The data in improper</p>\r\n            <canvas id=\"traffic-chart\" style={{ height: '100px' }}></canvas>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TrafficChange;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}